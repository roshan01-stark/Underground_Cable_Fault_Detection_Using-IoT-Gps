#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <SoftwareSerial.h>
#include <BlynkSimpleEsp8266.h>

#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 32 // OLED display height, in pixels
#define OLED_RESET     5 // Reset pin # (or -1 if sharing Arduino reset pin)

// Declaration for an SSD1306 display connected to I2C (SDA, SCL pins)
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

// Declare SoftwareSerial to communicate with GPS module
SoftwareSerial mySerial(2, 3);

// Put your Blynk auth token in the line below
char auth[] = "YourAuthToken";

// Variables to store GPS data
String gpsData;
String currentLocation;

// Declare a variable for storing fault locations
String faultLocation[4];

// Variables for controlling LCD
int count;
int flag;

void setup()
{
  // Initialize LCD
  display.begin(SSD1306_SWITCHCAPVCC, 0x3C);
  display.clearDisplay();

  // Initialize serial communication at 9600 baud rate
  Serial.begin(9600);
  mySerial.begin(9600);
  
  // Set up connection with Blynk
  Blynk.begin(auth);
  
  // Initialize variables
  count = 0;
  flag = 0;
  
  // Set fault locations
  faultLocation[0] = "12.3456,78.9123";
  faultLocation[1] = "12.3467,78.9133";
  faultLocation[2] = "12.3477,78.9143";
  faultLocation[3] = "12.3487,78.9153";
}

void loop()
{
  // Read the GPS data
  while(mySerial.available() > 0)
  {
    gpsData = mySerial.readStringUntil(',');
    currentLocation = gpsData;
    Serial.println(currentLocation);
  }
  
  // Check for faults
  for (int i = 0; i < 4; i++)
  {
    if (currentLocation == faultLocation[i])
    {
      flag = 1;
      count++;
      Blynk.notify("Fault Detected at " + faultLocation[i]);
      display.clearDisplay();
      display.setCursor(0, 0);
      display.println("Fault Detected!");
      display.display();
    }
  }
  
  // Clear LCD if no fault is detected
  if (flag == 0)
  {
    display.clearDisplay();
    display.display();
  }
  
  // Send fault count to Blynk
  Blynk.virtualWrite(V1, count);
  
  // Reset flag for next iteration
  flag = 0;
  
  // Delay for a second
  delay(1000);
}